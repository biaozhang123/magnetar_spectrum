#include <iostream>
#include <cmath>
#include "mathematics.h"
#include "monte_carlo.h"

using namespace std;

// This function accepts temperature in K and return photon angular frequency omega randomly drawn from the Planck's law

double sed_planck (double T) {
	double x, y;
	double kB = 1.380658e-16;     // erg / K
	double hbar = 1.05457266e-27; // erg s
        double omega;
	// Cumulative probabilities computed for Planck's law to be used in linear interpolation
	double u_list [100] = { 9.332031711262813e-07 , 2.021237284954523e-06 , 3.28979070027857e-06 , 4.768813728006094e-06 , 6.49322570846151e-06 , 8.503739388058453e-06 , 1.0847822051376055e-05 , 1.35808160910713e-05 , 1.676724545874802e-05 , 2.0482338823365098e-05 , 2.4813805373732207e-05 , 2.9863905157256428e-05 , 3.575186278859477e-05 , 4.261668145187285e-05 , 5.0620423547766175e-05 , 5.9952035323106654e-05 , 7.08318056206736e-05 , 8.351656380071494e-05 , 9.830573925811099e-05 , 0.00011554842519357688 , 0.00013565161286143823 , 0.00015908978995212577 , 0.00018641612870410124 , 0.00021827552650530402 , 0.00025541980498080424 , 0.0002987254238452733 , 0.00034921412424741176 , 0.0004080769842418016 , 0.00047670244787554033 , 0.0005567089808719887 , 0.0006499831119717227 , 0.0007587237418576804 , 0.0008854937437409087 , 0.0010332800439202612 , 0.001205563560082444 , 0.0014064005932322113 , 0.001640517519706903 , 0.0019134209167754198 , 0.002231525583083187 , 0.0026023032879731404 , 0.003034455505612277 , 0.0035381138645098464 , 0.004125072573052793 , 0.004809057668005205 , 0.0056060385736546176 , 0.006534588148336536 , 0.00761629812003643 , 0.008876257552125587 , 0.010343602699452285 , 0.012052147261015668 , 0.014041102529714728 , 0.0163558971682876 , 0.01904910614137884 , 0.022181497479196562 , 0.02582320372329499 , 0.03005502167805086 , 0.0349698388778465 , 0.04067417719696112 , 0.047289832240814 , 0.05495557021142221 , 0.06382882010049702 , 0.07408726614609086 , 0.08593020081824895 , 0.09957943902293426 , 0.1152795162266653 , 0.13329679328763466 , 0.1539169661107731 , 0.1774403280411412 , 0.2041739607868806 , 0.23441984756953477 , 0.2684577366808776 , 0.30652148525754724 , 0.3487676697345931 , 0.39523560294540194 , 0.445798760739176 , 0.5001092831280171 , 0.5575400163313808 , 0.6171327857255532 , 0.677567200399114 , 0.7371704329712819 , 0.7939926689702091 , 0.8459705816497783 , 0.8911856203913393 , 0.9281897329642025 , 0.9563219456077338 , 0.9758970117919186 , 0.9881521640684386 , 0.9949216558450957 , 0.998148183332466 , 0.9994417860297576 , 0.9998654809680815 , 0.9999750817253521 , 0.9999966113169327 , 0.9999996794539839 , 0.9999999802014735 , 0.9999999992584531 , 0.9999999999845492 , 0.999999999999838 , 0.9999999999999992 , 1.0 };

	// Relative energies to be used in linear interpolation
	double hw_kT_list [100] = { 1e-05 , 1.165914401179831e-05 , 1.359356390878527e-05 , 1.584893192461114e-05 , 1.8478497974222908e-05 , 2.1544346900318823e-05 , 2.5118864315095822e-05 , 2.9286445646252374e-05 , 3.414548873833601e-05 , 3.9810717055349695e-05 , 4.641588833612782e-05 , 5.411695265464637e-05 , 6.309573444801929e-05 , 7.356422544596421e-05 , 8.576958985908945e-05 , 0.0001 , 0.00011659144011798311 , 0.00013593563908785255 , 0.00015848931924611142 , 0.00018478497974222906 , 0.00021544346900318823 , 0.00025118864315095795 , 0.00029286445646252375 , 0.0003414548873833601 , 0.00039810717055349735 , 0.0004641588833612782 , 0.0005411695265464637 , 0.000630957344480193 , 0.0007356422544596414 , 0.0008576958985908946 , 0.001 , 0.001165914401179831 , 0.0013593563908785254 , 0.001584893192461114 , 0.0018478497974222907 , 0.0021544346900318843 , 0.0025118864315095794 , 0.0029286445646252374 , 0.003414548873833601 , 0.003981071705534973 , 0.004641588833612777 , 0.0054116952654646375 , 0.00630957344480193 , 0.007356422544596414 , 0.008576958985908937 , 0.01 , 0.01165914401179831 , 0.013593563908785255 , 0.01584893192461114 , 0.018478497974222907 , 0.021544346900318846 , 0.025118864315095794 , 0.029286445646252372 , 0.034145488738336005 , 0.039810717055349734 , 0.046415888336127774 , 0.054116952654646375 , 0.0630957344480193 , 0.07356422544596414 , 0.08576958985908938 , 0.1 , 0.11659144011798311 , 0.13593563908785242 , 0.15848931924611143 , 0.18478497974222907 , 0.21544346900318823 , 0.25118864315095824 , 0.29286445646252374 , 0.34145488738336005 , 0.3981071705534969 , 0.4641588833612782 , 0.5411695265464638 , 0.630957344480193 , 0.7356422544596406 , 0.8576958985908946 , 1.0 , 1.165914401179831 , 1.3593563908785242 , 1.584893192461114 , 1.8478497974222907 , 2.154434690031882 , 2.5118864315095824 , 2.9286445646252375 , 3.414548873833601 , 3.981071705534969 , 4.641588833612782 , 5.411695265464638 , 6.30957344480193 , 7.356422544596406 , 8.576958985908945 , 10.0 , 11.659144011798311 , 13.593563908785242 , 15.848931924611142 , 18.478497974222908 , 21.54434690031882 , 25.11886431509582 , 29.286445646252375 , 34.145488738336006 , 39.810717055349734 };

	x = uniform (1e-6, 1.0);

	y = interp1d (x, 100, u_list, hw_kT_list);

	omega = kB * T * y / hbar;

	return omega;
}
